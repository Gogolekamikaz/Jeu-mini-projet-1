Index: java/ch/epfl/cs107/play/game/superpacman/actor/SuperPacmanPlayer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ch.epfl.cs107.play.game.superpacman.actor;\r\n\r\nimport ch.epfl.cs107.play.game.areagame.Area;\r\nimport ch.epfl.cs107.play.game.areagame.actor.Interactable;\r\nimport ch.epfl.cs107.play.game.areagame.actor.Orientation;\r\nimport ch.epfl.cs107.play.game.areagame.actor.Sprite;\r\nimport ch.epfl.cs107.play.game.areagame.handler.AreaInteractionVisitor;\r\nimport ch.epfl.cs107.play.game.rpg.actor.Player;\r\nimport ch.epfl.cs107.play.math.DiscreteCoordinates;\r\nimport ch.epfl.cs107.play.window.Button;\r\nimport ch.epfl.cs107.play.window.Canvas;\r\nimport ch.epfl.cs107.play.window.Keyboard;\r\n\r\nimport java.util.Collections;\r\nimport java.util.List;\r\n\r\npublic class SuperPacmanPlayer extends Player {\r\n\r\n    private Sprite sprite;\r\n    private final static int SPEED = 6;\r\n\r\n    @Override\r\n    public void draw(Canvas canvas) {\r\n        sprite.draw(canvas);\r\n    }\r\n\r\n    @Override\r\n    public void update(float deltaTime) {\r\n        Keyboard keyboard= getOwnerArea().getKeyboard();\r\n        moveOrientate(Orientation.LEFT, keyboard.get(Keyboard.LEFT));\r\n        moveOrientate(Orientation.UP, keyboard.get(Keyboard.UP));\r\n        moveOrientate(Orientation.RIGHT, keyboard.get(Keyboard.RIGHT));\r\n        moveOrientate(Orientation.DOWN, keyboard.get(Keyboard.DOWN));\r\n        super.update(deltaTime);\r\n    }\r\n\r\n    /**\r\n     * Orientate or Move this player in the given orientation if the given button is down\r\n     * @param orientation (Orientation): given orientation, not null\r\n     * @param b (Button): button corresponding to the given orientation, not null\r\n     */\r\n    private void moveOrientate(Orientation orientation, Button b){\r\n\r\n        if(b.isDown()) {\r\n            if (isDisplacementOccurs() && getOwnerArea().canEnterAreaCells(this, Collections.singletonList(getCurrentMainCellCoordinates().jump(orientation.toVector())))){\r\n                orientate(orientation);\r\n                move(SPEED);\r\n            }\r\n        }\r\n    }\r\n\r\n    public SuperPacmanPlayer(Area area, Orientation orientation, DiscreteCoordinates coordinates) {\r\n        super(area, orientation, coordinates);\r\n        sprite = new Sprite(\"pacman\", 1.f, 1.f,this);\r\n    }\r\n\r\n    @Override\r\n    public List<DiscreteCoordinates> getCurrentCells() {\r\n        return Collections.singletonList(getCurrentMainCellCoordinates());\r\n    }\r\n\r\n    @Override\r\n    public List<DiscreteCoordinates> getFieldOfViewCells() {\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public boolean wantsCellInteraction() {\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public boolean wantsViewInteraction() {\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public void interactWith(Interactable other) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public boolean takeCellSpace() {\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean isCellInteractable() {\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean isViewInteractable() {\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public void acceptInteraction(AreaInteractionVisitor v) {\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- java/ch/epfl/cs107/play/game/superpacman/actor/SuperPacmanPlayer.java	(revision da0172217e2a332efc5f84e0453642848405b0dd)
+++ java/ch/epfl/cs107/play/game/superpacman/actor/SuperPacmanPlayer.java	(date 1606489511029)
@@ -42,7 +42,7 @@
     private void moveOrientate(Orientation orientation, Button b){
 
         if(b.isDown()) {
-            if (isDisplacementOccurs() && getOwnerArea().canEnterAreaCells(this, Collections.singletonList(getCurrentMainCellCoordinates().jump(orientation.toVector())))){
+            if (!isDisplacementOccurs() && getOwnerArea().canEnterAreaCells(this, Collections.singletonList(getCurrentMainCellCoordinates().jump(orientation.toVector())))){
                 orientate(orientation);
                 move(SPEED);
             }
